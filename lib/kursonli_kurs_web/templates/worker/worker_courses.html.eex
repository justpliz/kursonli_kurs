<% worker=Plug.Conn.get_session(@conn,:worker) %>
  <%= if Timex.before?(Timex.now("Asia/Almaty"), worker.paid_up_to) do %>
    <div class="margin_content">
      <div class="flex justify-between items-center">
        <div class="text-base flex-1-1">Последнее обновление курса:
          <%= @last_date %>
        </div>
        <%= form_for @conn, Routes.worker_path(@conn, :update_course), fn f -> %>
          <div class="flex gap-4">
            <button class="btn_save flex items-center justify-center" type="submit">
              <span class="material-symbols-outlined" style="color: #fff; font-weight: 500; font-size: 20px;">
                save
              </span>
              Сохранить изменения
            </button>
            <a href="/worker/courses" class="btn_cancel flex items-center justify-center" type="submit">
              <span class="material-symbols-outlined" style="color: #111111; font-weight: 500; font-size: 20px;">
                cancel
              </span>
              Отменить изменения
            </a>
          </div>
      </div>
      <div>
        <div class="flex items-center justify-start gap-4 pb-2">
          <input name="change_all_filials" type="hidden" value="false">
          <div class="flex items-center justify-center">
            <label for="all" class="label_input pr-2">Изменить все курсы</label>
            <input id="all" name="change_all_filials" type="checkbox" value="true" class="type_select rounded">
          </div>

          <div class="flex items-center justify-center">
            <label for="visible_course_status" class="label_input pr-2">Сделать видимым</label>
            <%= checkbox f, :visible_course_status, checked: @visible_course_status, class: "type_select rounded" %>
          </div>
        </div>
      </div>
      <div class="relative overflow-x-auto shadow-md sm:rounded-lg">
        <table class="w-full text-sm 2xl:text-xs text-left text-gray-500 table_sort">
          <thead class="text-xs text-gray-700 uppercase bg-white">
            <tr>
              <th scope="col" class="p-6 2xl:p-4 border-b-2 border-gray-200">
                Валюта
              </th>
              <th scope="col" class="p-6 2xl:p-4 border-b-2 border-x-2 border-gray-200">
                Короткое название
              </th>
              <th scope="col" class="p-6 2xl:p-4 border-b-2 border-x-2 border-gray-200">
                Цена покупки
              </th>
              <th scope="col" class="p-6 2xl:p-4 border-b-2 border-x-2 border-gray-200">
                Цена продажи
              </th>
            </tr>
          </thead>
          <tbody>
            <%= for item <- @courses_list do %>
              <tr class="bg-white">
                <td class="px-6 py-4 border-t-2">
                  <%= item.currency_name %>
                </td>
                <td class="px-6 py-4 border-t-2 border-x-2 border-gray-200">
                  <%= item.currency_short_name %>
                </td>
                <td class="px-6 py-4 border-t-2 border-x-2 border-gray-200">
                  <%= text_input f, :"#{item.course_id}|value_for_purchase",
                    class: "input_full number value_for_purchase" , value: item.value_for_purchase%>

                </td>
                <td class="px-6 py-4 border-x-2 border-t-2">
                  <%= text_input f, :"#{item.course_id}|value_for_sale",
                    class: "input_full number value_for_sale" , value: item.value_for_sale %>
                </td>
              </tr>
              <% end %>
                <% end %>
          </tbody>
        </table>
      </div>
    </div>
    <% else %>
<%= render(KursonliKursWeb.WorkerView, "notification_service_access.html" , conn: @conn, instructions: @instructions) %> 
<% end %>
        
<%= if not is_nil(@expiration), do: render(KursonliKursWeb.WorkerView, "notification_expiration.html" ,
conn: @conn, expiration: @expiration) %>

<script>
  // Получаем все элементы input с классом "number"
const numberInputs = document.querySelectorAll('.number');

// Для каждого элемента input с классом "number"
numberInputs.forEach(function(input) {

  // Добавляем обработчик события "input"
  input.addEventListener('input', function() {

    // Оставляем только цифры и точку в значении input
    input.value = input.value.replace(/[^0-9\.]/g, '');

    // Ограничиваем количество символов после точки до 2
    const dotIndex = input.value.indexOf('.');
    if (dotIndex !== -1 && input.value.substring(dotIndex + 1).length > 2) {
      input.value = input.value.substring(0, dotIndex + 4);
    }

  });
});

</script>