<div class="mx-auto w-full bg-dblue">
  <div class="max-w-1440 flex justify-between items-center mx-auto h-20">
    <a href="/"><img src="/images/white-line-logo.svg" alt=""></a>

    <div class="relative w-1/5">
      <input class="input_search table_search_input" type="text" placeholder="" id="index-table-search-row"
        onkeyup="filterSearch()">
      <div class="absolute inset-y-0 right-4 flex items-center pl-3 pointer-events-none">
        <img src="/images/icons/search.svg" alt="">
      </div>
    </div>

    <a href="/worker/login" class="href_index">Войти</a>
  </div>
</div>


<div class="max-w-1440 mx-auto">
  <div class="flex py-8 ">
    <%= for item <- @city_list do %>
      <a class="font-bold pr-4" href="city?name=<%= item.name %>">
        <%= item.name %> (<span class="font-bold text-red-500">
            <%= item.count %>
          </span>)
      </a>
      <% end %>
  </div>

  <div class="font-black text-black pb-4">
    Курсы валют в обменных пунктах в городе <%= @name %> на <%=
        KursonliKursWeb.GeneralHelper.date_to_string_data(Timex.now) %>
  </div>

  <div class="relative overflow-x-auto rounded-xl">
    <table class="w-full text-sm text-lefttext-gray-800 table-fixed table_search table_sort">
      <thead class="text-sm uppercase bg-gray-200">
        <tr>
          <th scope="col" class="py-6 px-4 w-1/6 border-2 border-l-0 border-t-0 border-gray-300">
            Обменный пункт
          </th>
          <th scope="col" class="py-6 px-4 w-10p border-2 border-t-0 border-gray-300 sorted_tr">
            Время
          </th>

          <th scope="col" class="border-2 w-5p border-r-0 border-t-0 border-gray-300 sorted_tr bg_th"></th>
          <th scope="col" class="py-6 px-4 w-10p border-2 border-x-0 border-t-0 border-gray-300">
            <select class="select_table" data-select="1">
              <%= for item <- @currency_list do %>
                <option value="<%= item.short_name %>">
                  <%= item.short_name %>
                </option>
                <% end %>
            </select>
          </th>
          <th scope="col" class="border-2 w-5p border-t-0 border-l-0 border-gray-300 sorted_tr bg_th"></th>

          <th scope="col" class="border-2 w-5p border-r-0 border-t-0 border-gray-300 sorted_tr bg_th"></th>
          <th scope="col" class="py-6 px-4 w-10p border-2 border-x-0 border-t-0 border-gray-300">
            <select class="select_table " data-select="2">
              <%= for item <- @currency_list do %>
                <option value="<%= item.short_name %>">
                  <%= item.short_name %>
                </option>
                <% end %>
            </select>
          </th>
          <th scope="col" class="border-2 w-5p border-t-0 border-l-0 border-gray-300 sorted_tr bg_th"></th>

          <th scope="col" class="border-2 w-5p border-r-0 border-t-0 border-gray-300 sorted_tr bg_th"></th>
          <th scope="col" class="py-6 px-4 w-10p border-2 border-x-0 border-t-0 border-gray-300">
            <select class="select_table" data-select="3">
              <%= for item <- @currency_list do %>
                <option value="<%= item.short_name %>">
                  <%= item.short_name %>
                </option>
                <% end %>
            </select>
          </th>
          <th scope="col" class="border-2 w-5p border-t-0 border-l-0 border-gray-300 sorted_tr bg_th"></th>

          <th scope="col" class="py-6 px-4 w-1/6 border-2 border-t-0 border-gray-300 border-r-0">
            Контакты
          </th>
        </tr>
      </thead>
      <tbody>
        <%= for item <- @courses_list do %>
          <tr class="bg-gray-100 border-b-0 hover:bg-gray-200 transition-all" data-id="<%= item.filial_id  %>"
            data-item="<%= item |> PwHelper.Normalize.repo |> Jason.encode!() %>">
            <td class="px-6 border-2 border-b-0 border-gray-300 border-l-0 py-3 font-medium text-gray-900">
              <a href="personal?filial=<%= item.filial_id %>">
                <%= item.filial_name %> - <%= item.currency_short_name %>
              </a>
              <div class="hidden">
                <%= [gold, wholesale_rate]=item.tags %>
              </div>
              <div class="">
                <%= if String.to_atom(gold) do %>
                  <span class="bg-yellow-500 rounded px-2">Золото</span>
                  <% end %>
                    <%= if String.to_atom(wholesale_rate) do %>
                      <span class="bg-green-600 rounded px-2">Оптовый курс</span>
                      <% end %>
              </div>
            </td>
            <td class="px-6 border-2 border-b-0 border-gray-300">
              <%= KursonliKursWeb.GeneralHelper.date_to_string_time(item.date) %>
            </td>

            <td class="px-6 border-2 border-b-0 border-r-0 border-gray-300 text-center sale" data-select="1">
              <%= item.value_for_sale %>
            </td>
            <td class="px-6 border-2 border-b-0 border-x-0 border-gray-300 td_before relative"></td>
            <td class="px-6 border-2 border-b-0 border-l-0 border-gray-300 text-center pushare" data-select="1">
              <%= item.value_for_purchase %>
            </td>

            <td class="px-6 border-2 border-b-0 border-r-0 border-gray-300 text-center sale" data-select="2">
              <%= item.value_for_sale %>
            </td>

            <td class="px-6 border-2 border-b-0 border-x-0 border-gray-300 td_before relative"></td>

            <td class="px-6 border-2 border-b-0 border-l-0 border-gray-300 text-center pushare" data-select="2">
              <%= item.value_for_purchase %>
            </td>
            <td class="px-6 border-2 border-b-0 border-r-0 border-gray-300 text-center sale" data-select="3">
              <%= item.value_for_sale %>
            </td>

            <td class="px-6 border-2 border-b-0 border-x-0 border-gray-300 td_before relative"></td>

            <td class="px-6 border-2 border-b-0 border-l-0 border-gray-300 text-center pushare" data-select="3">
              <%= item.value_for_purchase %>
            </td>
            <td class="px-6 border-2 border-b-0 border-gray-300 border-r-0 text-center">
              <div><a class="hover:underline" href='tel:<%= item.phones["phone1"] %>'>
                  <%= item.phones["phone1"] %>
                </a></div>
              <div><a class="hover:underline" href='tel:<%= item.phones["phone2"] %>'>
                  <%= item.phones["phone2"] %>
                </a></div>
              <div><a class="hover:underline" href='tel:<%= item.phones["phone3"] %>'>
                  <%= item.phones["phone3"] %>
                </a></div>
            </td>
          </tr>
          <% end %>
      </tbody>
    </table>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const elements = [...document.querySelectorAll("[data-id]")]
    const courses = ["USD", "EUR"]

    const selectTable = [...document.querySelectorAll(".select_table")]
    selectTable.forEach((el) => el.addEventListener('change', (e) => {
      const currentSelect = e.currentTarget.dataset.select
      const elementNew = elements.map((el) => el)
      const elementFilterd = elementNew.sort((el) => {
        const item = JSON.parse(el.dataset.item)
        if (item.currency_short_name == e.currentTarget.value)
          return -1
        else
          return 1
      })

      // const filtered = elementFilterd.map((elem) => {
      //   const item = JSON.parse(elem.dataset.item)
      //   console.log(item)


      //   return {
      //     item: JSON.parse(elem.dataset.item),

      //   }
      // })
      elements.forEach((value, index) => {
        const elemFindSale = value.querySelector(`.sale[data-select="${currentSelect}"]`)
        const elemFindPushare = value.querySelector(`.pushare[data-select="${currentSelect}"]`)
        const item = JSON.parse(elementFilterd[index].dataset.item)
        console.log(value, elementFilterd[index])
        elemFindSale.innerHTML = item.value_for_sale
        elemFindPushare.innerHTML = item.value_for_purchase
      })
      // elementFilterd.forEach((value, i) => {

      //   const item = JSON.parse(value.dataset.item)
      //   console.log(item)
      //   console.log(filtered[i].sale, item.value_for_sale)
      //   filtered[i].sale.textContent = item.value_for_sale
      // })
    }));

    const getSort = ({ target }) => {
      const order = (target.dataset.order = -(target.dataset.order || -1));
      const index = [...target.parentNode.cells].indexOf(target);
      const collator = new Intl.Collator({ numeric: true });
      const comparator = (index, order) => (a, b) => order * collator.compare(
        a.children[index].innerHTML,
        b.children[index].innerHTML
      );

      for (const tBody of target.closest('table').tBodies)
        tBody.append(...[...tBody.rows].sort(comparator(index, order)));

      for (const cell of target.parentNode.cells)
        cell.classList.toggle('sorted', cell === target);

    };
    document.querySelectorAll('.table_sort .sorted_tr').forEach(tableTH => tableTH.addEventListener('click', () => getSort(event)));
  });

  function filterSearch() {
    var phrase = document.getElementsByClassName('table_search_input');
    var table = document.getElementsByClassName('table_search');
    var regPhrase = new RegExp(phrase[0].value, 'i');
    var flag = false;
    for (var i = 1; i < table[0].rows.length; i++) {
      flag = false;
      for (var j = table[0].rows[i].cells.length - 1; j >= 0; j--) {
        flag = regPhrase.test(table[0].rows[i].cells[j].innerHTML);
        if (flag) break;
      }
      if (flag) {
        table[0].rows[i].style.display = "";
      } else {
        table[0].rows[i].style.display = "none";
      }
    }
  }
</script>