<div class="mx-auto w-full bg-dblue">
  <div class="max-w-1440 flex justify-between items-center mx-auto h-20">
    <a href="/"><img src="/images/white-line-logo.svg" alt=""></a>

    <div class="relative w-1/5">
      <input class="input_search table_search_input" type="text" placeholder="" id="index-table-search-row"
        onkeyup="filterSearch()">
      <div class="absolute inset-y-0 right-4 flex items-center pl-3 pointer-events-none">
        <img src="/images/icons/search.svg" alt="">
      </div>
    </div>
    
    <a href="/worker/login" class="href_index">Войти</a>
  </div>
</div>

<style>
  table {
  width: 100%;
  border-collapse: collapse;
}
th, td {
  border: 1px solid black;
  padding: 8px;
  text-align: left;
}
th {
  background-color: lightgray;
}

</style>

  <table id="table">
    <thead>
      <tr>
        <th>
          <select id="name-sort" onchange="sortTable()">
            <option value="0">Name</option>
            <option value="1">Ascending</option>
            <option value="-1">Descending</option>
          </select>
        </th>
        <th>
          <select id="phone-sort" onchange="sortTable()">
            <option value="0">Phone</option>
            <option value="1">Ascending</option>
            <option value="-1">Descending</option>
          </select>
        </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>John Doe</td>
        <td>555-555-5555</td>
      </tr>
      <tr>
        <td>Jane Doe</td>
        <td>555-555-5556</td>
      </tr>
      <tr>
        <td>Bob Smith</td>
        <td>555-555-5557</td>
      </tr>
    </tbody>
  </table>

<div class="max-w-1440 mx-auto">
  <div class="flex py-8 ">
    <span class="font-bold pr-4">
      Алматы
      (<span class="font-bold text-red-500">24</span>)
    </span>
    <span class="font-bold pr-4">
      Караг
      (<span class="font-bold text-red-500">14</span>)
    </span>
  </div>

  <div class="font-black text-black pb-4">
    Курсы валют в обменных пунктах в городе ГОРОД на ДАТА
  </div>

  <div class="relative overflow-x-auto rounded-xl">
    <table class="w-full text-sm text-lefttext-gray-800 table_search table_sort">
      <thead class="text-sm uppercase bg-gray-200">
        <tr>
          <th scope="col" class="py-6 px-4 border-2 border-l-0 border-t-0 border-gray-300">
            Обменный пункт
          </th>
          <th scope="col" class="py-6 px-4 border-2 border-t-0 border-gray-300 sorted_tr">
            Время
          </th>
          <th scope="col" class="py-6 px-4 border-2 border-t-0 border-gray-300 sorted_tr">
            usd
          </th>
          <th scope="col" class="py-6 px-4 border-2 border-t-0 border-gray-300 sorted_tr">
            eur
          </th>
          <th scope="col" class="py-6 px-4 border-2 border-t-0 border-gray-300 sorted_tr">
            rub
          </th>
          <th scope="col" class="py-6 px-4 border-2 border-t-0 border-gray-300 border-r-0">
            Контакты
          </th>
        </tr>
      </thead>
      <tbody>
        <%= for item <- @courses_list do %>
          <tr class="bg-gray-100 border-b-0">
            <td class="px-6 border-2 border-b-0 border-gray-300 border-l-0 py-3 font-medium text-gray-900">
              psum dolor.
            </td>
            <td class="px-6 border-2 border-b-0 border-gray-300">
              <%= item.updated_at %>
            </td>
            <td class="px-6 border-2 border-b-0 border-gray-300">
              <span>1</span>
              <span>1</span>
            </td>
            <td class="px-6 border-2 border-b-0 border-gray-300">
              4
            </td>
            <td class="px-6 border-2 border-b-0 border-gray-300">
              2
            </td>
            <td class="px-6 border-2 border-b-0 border-gray-300 border-r-0">
              Lorem ipsum dolor sit.
            </td>
          </tr>
        <% end %>
      </tbody>
    </table>
  </div>
</div>

<script>
  function filterSearch() {
    var phrase = document.getElementsByClassName('table_search_input');
    var table = document.getElementsByClassName('table_search');
    var regPhrase = new RegExp(phrase[0].value, 'i');
    var flag = false;
    for (var i = 1; i < table[0].rows.length; i++) {
      flag = false;
      for (var j = table[0].rows[i].cells.length - 1; j >= 0; j--) {
        flag = regPhrase.test(table[0].rows[i].cells[j].innerHTML);
        if (flag) break;
      }
      if (flag) {
        table[0].rows[i].style.display = "";
      } else {
        table[0].rows[i].style.display = "none";
      }
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    const getSort = ({ target }) => {
      const order = (target.dataset.order = -(target.dataset.order || -1));
      const index = [...target.parentNode.cells].indexOf(target);
      const collator = new Intl.Collator(['ru'], { numeric: true });
      const comparator = (index, order) => (a, b) => order * collator.compare(
        a.children[index].innerHTML,
        b.children[index].innerHTML
      );

      for (const tBody of target.closest('table').tBodies)
        tBody.append(...[...tBody.rows].sort(comparator(index, order)));

      for (const cell of target.parentNode.cells)
        cell.classList.toggle('sorted', cell === target);
    };
    document.querySelectorAll('.table_sort .sorted_tr').forEach(tableTH => tableTH.addEventListener('click', () => getSort(event)));
  });

  function sortTable() {
      var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
      table = document.getElementById("table");
      switching = true;
      // Set the sorting direction to ascending:
      dir = "asc";
      /* Make a loop that will continue until
      no switching has been done: */
      while (switching) {
        // Start by saying: no switching is done:
        switching = false;
        rows = table.rows;
        /* Loop through all table rows (except the
        first, which contains table headers): */
        for (i = 1; i < (rows.length - 1); i++) {
          // Start by saying there should be no switching:
          shouldSwitch = false;
          /* Get the two elements you want to compare,
          one from current row and one from the next: */
          x = rows[i].getElementsByTagName("TD")[0];
          y = rows[i + 1].getElementsByTagName("TD")[0];
          // Check if the two rows should switch place
          if (dir == "asc") {
            if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
              // If so, mark as a switch and break the loop:
              shouldSwitch = true;
              break;
            }
          } else if (dir == "desc") {
            if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
              // If so, mark as a switch and break the loop:
              shouldSwitch = true;
              break;
            }
          }
        }
        if (shouldSwitch) {
          /* If a switch has been marked, make the switch
          and mark that a switch has been done: */
          rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
          switching = true;
          // Each time a switch is done, increase this count by 1:
          switchcount++;
        } else {
          /* If no switching has been done AND the direction is "asc",
          set the direction to "desc" and run the while loop again. */
          if (switchcount == 0 && dir == "asc") {
            dir = "desc";
            switching = true;
          }
        }
      }
    }

</script>